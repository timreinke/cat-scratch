{
	// Place your machine-starter workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Basic Event": {
	 	"scope": "javascript,typescript",
	 	"prefix": "event",
	 	"body": [
			"export const $1Event = t.readonly(t.type({",
			"  type: t.literal(\"$2\"),",
			"  $0",
			"}))",
			"",
			"export type $1Event = t.TypeOf<typeof $1Event>",
			"",
			"export function isA$1Event(event: {type: string}) : event is $1Event {",
			"  return event.type == \"$2\"",
			"}",
		],
	 	"description": "A basic event definition"
	}
	
}